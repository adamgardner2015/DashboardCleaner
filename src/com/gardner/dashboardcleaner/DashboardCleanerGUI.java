/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gardner.dashboardcleaner;

import java.awt.event.ItemEvent;
import java.io.File;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author cwuk-agardner
 */
public class DashboardCleanerGUI extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public DashboardCleanerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textfield_system_profile_name = new javax.swing.JTextField();
        button_select_process = new javax.swing.JButton();
        label_system_profile = new java.awt.Label();
        label_target_dt_version = new javax.swing.JLabel();
        combobox_dt_version = new javax.swing.JComboBox();
        label_dashboard_author = new javax.swing.JLabel();
        label_dashboard_modified_by = new javax.swing.JLabel();
        textfield_author = new javax.swing.JTextField();
        textfield_modifiedby = new javax.swing.JTextField();
        label_autorefresh = new javax.swing.JLabel();
        combobox_autorefresh_toggle = new javax.swing.JComboBox();
        combobox_autorefresh_timeframe = new javax.swing.JComboBox();
        label_dashboard_timeframe = new javax.swing.JLabel();
        combobox_dashboard_timeframe = new javax.swing.JComboBox();
        label_drilldowns = new javax.swing.JLabel();
        combobox_drilldowns = new javax.swing.JComboBox();
        label_colour_scheme = new javax.swing.JLabel();
        combobox_colour_scheme = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        label_about_dashboard_cleaner = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard Cleaner v1.1");

        textfield_system_profile_name.setMinimumSize(new java.awt.Dimension(25, 26));
        textfield_system_profile_name.setPreferredSize(new java.awt.Dimension(120, 26));

        button_select_process.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        button_select_process.setText("Select & Process Dashboard");
        button_select_process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_select_processActionPerformed(evt);
            }
        });

        label_system_profile.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_system_profile.setText("System Profile Name:");

        label_target_dt_version.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_target_dt_version.setText("Target Dynatrace Version:");

        combobox_dt_version.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Do Not Change", "5.6", "6.0", "6.1", "6.2", "6.3" }));

        label_dashboard_author.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_dashboard_author.setText("Dashboard Author:");

        label_dashboard_modified_by.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_dashboard_modified_by.setText("Dashboard Last Modified By:");

        textfield_author.setText("admin");
        textfield_author.setMinimumSize(new java.awt.Dimension(25, 26));
        textfield_author.setPreferredSize(new java.awt.Dimension(120, 26));

        textfield_modifiedby.setText("admin");
        textfield_modifiedby.setMinimumSize(new java.awt.Dimension(25, 26));
        textfield_modifiedby.setPreferredSize(new java.awt.Dimension(120, 26));

        label_autorefresh.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_autorefresh.setText("Autorefresh Dashboard:");

        combobox_autorefresh_toggle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No", "Yes" }));
        combobox_autorefresh_toggle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_autorefresh_toggleItemStateChanged(evt);
            }
        });

        combobox_autorefresh_timeframe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10 seconds", "6 minutes", "15 minutes", "1 hour", "6 hours", "24 hours" }));
        combobox_autorefresh_timeframe.setActionCommand("");
        combobox_autorefresh_timeframe.setEnabled(false);
        combobox_autorefresh_timeframe.setName(""); // NOI18N
        combobox_autorefresh_timeframe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_autorefresh_timeframeActionPerformed(evt);
            }
        });

        label_dashboard_timeframe.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_dashboard_timeframe.setText("Dashboard Timeframe:");

        combobox_dashboard_timeframe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Last 5 minutes", "Last 15 minutes", "Last 30 minutes", "Last 1 hour", "Last 6 hours", "Last 24 hours", "Last 72 hours", "Last Week", "Last Month", "Last Year" }));

        label_drilldowns.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_drilldowns.setText("Open Drilldowns in New Window:");

        combobox_drilldowns.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        combobox_drilldowns.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_drilldownsItemStateChanged(evt);
            }
        });

        label_colour_scheme.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label_colour_scheme.setText("Dashboard Colour Scheme:");

        combobox_colour_scheme.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day (Black Text and White Background)", "Night (White Text and Black Background)" }));
        combobox_colour_scheme.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_colour_schemeItemStateChanged(evt);
            }
        });

        label_about_dashboard_cleaner.setText("Dashboard Cleaner v1.1 by Adam Gardner (adam.gardner@dynatrace.com)");
        label_about_dashboard_cleaner.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_about_dashboard_cleaner)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_about_dashboard_cleaner)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_select_process, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(label_system_profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(label_target_dt_version)
                                        .addComponent(label_dashboard_author)
                                        .addComponent(label_dashboard_modified_by)
                                        .addComponent(label_autorefresh)
                                        .addComponent(label_dashboard_timeframe))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(label_drilldowns)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label_colour_scheme)
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combobox_colour_scheme, 0, 361, Short.MAX_VALUE)
                            .addComponent(textfield_system_profile_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combobox_drilldowns, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textfield_author, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combobox_dt_version, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textfield_modifiedby, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(combobox_autorefresh_toggle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(combobox_autorefresh_timeframe, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(combobox_dashboard_timeframe, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_system_profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfield_system_profile_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobox_dt_version, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_target_dt_version))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_dashboard_author)
                    .addComponent(textfield_author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textfield_modifiedby, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_dashboard_modified_by))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_autorefresh)
                    .addComponent(combobox_autorefresh_toggle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combobox_autorefresh_timeframe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_dashboard_timeframe)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(combobox_dashboard_timeframe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combobox_drilldowns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label_drilldowns))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_colour_scheme)
                    .addComponent(combobox_colour_scheme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_select_process)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_select_processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_select_processActionPerformed
        // TODO add your handling code here:
        String strSystemProfileName = textfield_system_profile_name.getText();
        String strTargetVersion = (String) combobox_dt_version.getSelectedItem();
        // START TODO
        String strAuthor = textfield_author.getText();
        String strLastModifiedBy = textfield_modifiedby.getText();
        String strAutoRefreshString = (String) combobox_autorefresh_toggle.getSelectedItem(); // Yes or No
        String strAutoRefreshTime = (String) combobox_autorefresh_timeframe.getSelectedItem(); // 10 seconds, 5 minutes, 15 minutes, 1 hour, 6 hours, 24 hours
        String strDashboardTimeframe = (String) combobox_dashboard_timeframe.getSelectedItem(); // Automatic, Last 5 minutes, Last 10 minutes, Last 15 minutes, Last 30 minutes, Last 1 hour, Last 6 hours, Last 24 hours
        String strOpenDrilldownsNewWindow = (String) combobox_drilldowns.getSelectedItem(); // Yes, No
        

        String strDashboardColourScheme = (String) combobox_colour_scheme.getSelectedItem(); // Day (Black Text and White Background), Night (White Text and Black Background)
        
        JFileChooser oFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Dashboard XML Files (.xml)","xml");
        oFileChooser.setFileFilter(filter);
        oFileChooser.showOpenDialog(this);
        
        File oFile = oFileChooser.getSelectedFile();
        boolean bSuccess = false;
        
        // Handle the case where a user clicks cancel
        if (oFile == null) return;
        
        if (!oFile.getName().endsWith(".dashboard.xml"))
        {
            JOptionPane.showMessageDialog(null, "Invalid dashboard file. Please try again.", "Severe Error", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            /************************
             *    MAIN PROCESSING
             ************************/
            try
            {
                DashboardProcessor oProcessor = new DashboardProcessor(oFileChooser.getSelectedFile());
                oProcessor.setSystemProfileName(strSystemProfileName); // Rule 1
                oProcessor.setAuthorModifiedByName(strAuthor, strLastModifiedBy); // Rule 2 & 3
                oProcessor.setTimeframe(strDashboardTimeframe);
                        
                if (strAutoRefreshString.equalsIgnoreCase(IConstants.YES))
                {
                    String[] astrParts = strAutoRefreshTime.split(" ");
                    String strTime = astrParts[0];
                    String strUnit = astrParts[1].toUpperCase(); // Must be uppercase to satisfy XML specification.
                    oProcessor.setAutoRefresh(true,strTime,strUnit);
                }
                else
                {
                    /*
                     * Somehow this sets it to 5 MINUTES. I have no idea how it does this, BUT it still works OK when opened in the client. 
                    */
                    oProcessor.setAutoRefresh(false, "NULL", "NULL");
                }
                
                if (!strTargetVersion.equals(IConstants.DO_NOT_CHANGE_MSG)) oProcessor.setTargetVersion(strTargetVersion);

                oProcessor.drilldownsNewDashboard(strOpenDrilldownsNewWindow);
                
                oProcessor.setDayColourScheme(strDashboardColourScheme);
                bSuccess = oProcessor.save();
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Invalid dashboard file. Please try again.", "Severe Error", JOptionPane.ERROR_MESSAGE);
            }
            
            if (bSuccess) JOptionPane.showMessageDialog(null, "Dashboard successfully processed. Look in the original directory for the _clean.dashboard.xml file", "Dashboard Processing Complete", JOptionPane.INFORMATION_MESSAGE);
            
        }
        
    }//GEN-LAST:event_button_select_processActionPerformed

    private void combobox_autorefresh_toggleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_autorefresh_toggleItemStateChanged
        // TODO add your handling code here:
        String strSelection = (String) evt.getItem();
        /*
         * If we're toggling the autorefresh to on, show the timeframe selection
         * otherwise, disable the timeframe.
         * TODO - Remember when finally processing, if this is no, ignore the timeframe.
         */
        if (strSelection.equalsIgnoreCase("yes") && evt.getStateChange() == ItemEvent.SELECTED)
        {
            //If item is Yes, enable the timeframe combobox.
            combobox_autorefresh_timeframe.setEnabled(true);
        }
        else
        {
            // Else disable
            combobox_autorefresh_timeframe.setEnabled(false);
        }
    }//GEN-LAST:event_combobox_autorefresh_toggleItemStateChanged

    private void combobox_drilldownsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_drilldownsItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_drilldownsItemStateChanged

    private void combobox_colour_schemeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_colour_schemeItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_colour_schemeItemStateChanged

    private void combobox_autorefresh_timeframeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_autorefresh_timeframeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_autorefresh_timeframeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardCleanerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardCleanerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardCleanerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardCleanerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardCleanerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_select_process;
    private javax.swing.JComboBox combobox_autorefresh_timeframe;
    private javax.swing.JComboBox combobox_autorefresh_toggle;
    private javax.swing.JComboBox combobox_colour_scheme;
    private javax.swing.JComboBox combobox_dashboard_timeframe;
    private javax.swing.JComboBox combobox_drilldowns;
    private javax.swing.JComboBox combobox_dt_version;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label_about_dashboard_cleaner;
    private javax.swing.JLabel label_autorefresh;
    private javax.swing.JLabel label_colour_scheme;
    private javax.swing.JLabel label_dashboard_author;
    private javax.swing.JLabel label_dashboard_modified_by;
    private javax.swing.JLabel label_dashboard_timeframe;
    private javax.swing.JLabel label_drilldowns;
    private java.awt.Label label_system_profile;
    private javax.swing.JLabel label_target_dt_version;
    private javax.swing.JTextField textfield_author;
    private javax.swing.JTextField textfield_modifiedby;
    private javax.swing.JTextField textfield_system_profile_name;
    // End of variables declaration//GEN-END:variables
}
